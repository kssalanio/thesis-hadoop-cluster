---

# Ansible role to install Hadoop

  - name: Check If hadoop is already installed or not
    shell: "{{ hadoop_home_dir }}/bin/hadoop -version 2>&1 | grep version | awk '{print $3}' | sed 's/\"//g'"
    register: hadoop_installed

  - name: Installed hadoop version
    debug: "msg={{hadoop_installed.stdout}}"

  - block:
    - name: Download Java
      #command: "wget -q -O {{hadoop_archive}} --no-check-certificate --no-cookies --header 'Cookie: oraclelicense=accept-securebackup-cookie' {{download_url}} creates={{hadoop_archive}}" ## Old way to download
      get_url:
        url: "{{download_url}}"
        dest: "{{hadoop_archive}}"
  - name: ansible create directory example
    file:
      path: "{{hadoop_home_dir}}"
      state: directory

    - name: Unpack archive
      #command: "tar -zxf {{hadoop_archive}} -C {{download_folder}} creates={{hadoop_home_dir}}" ## Old way to untar
      unarchive:
        src: "{{hadoop_archive}}"
        dest: "{{hadoop_home_dir}}"
        remote_src: yes

    - name: Fix hadoop dir ownership
      file: state=directory path={{hadoop_home_dir}} owner=root group=root recurse=yes

    - name: Set/Configure PATH in environment variables
      shell: "echo 'PATH={{hadoop_home_dir}}/bin:{{hadoop_home_dir}}/sbin:$PATH' > {{env_vars_file}}"

    - name: Set/Configure PATH in environment variables
      shell: "echo 'PATH={{hadoop_home_dir}}/bin:{{hadoop_home_dir}}/sbin:$PATH' > {{env_vars_file}}"

    - name: Set/Configure HADOOP_CONF_DIR in environment variables
      shell: "echo 'export HADOOP_CONF_DIR={{hadoop_home_dir}}/etc/hadoop' > {{env_vars_file}}"

    - name: Set/Configure LD_LIBRARY_PATH in environment variables
      shell: "echo 'export LD_LIBRARY_PATH={{hadoop_home_dir}}/lib/native:$LD_LIBRARY_PATH' > {{env_vars_file}}"

    - name: Clean up
      file: state=absent path={{hadoop_archive}}

    when: hadoop_installed.stdout == ""